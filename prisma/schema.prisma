// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  name       String
  email      String      @unique
  password   String
  photo      String?
  role       Role        @default(USER)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  posts      Post[]
  portfolios Portfolio[]
}

enum Role {
  ADMIN
  USER
}

model Post {
  id         String       @id @default(cuid())
  title      String
  content    String
  thumbnail  String?
  isFeatured Boolean      @default(false)
  tags       String[]
  views      Int          @default(0)
  authorId   String
  author     User         @relation(fields: [authorId], references: [id])
  catId      String
  category   BlogCategory @relation(fields: [catId], references: [id])
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  @@index([catId])
  @@index([authorId])
}

model BlogCategory {
  id    String @id @default(cuid())
  name  String @unique
  posts Post[]
}

model Category {
  id         String      @id @default(cuid())
  name       String      @unique
  Portfolios Portfolio[]
}

model Portfolio {
  id          String   @id @default(cuid())
  catId       String
  title       String
  img         String?
  description String?
  authorId    String
  tags        String[] @default([])
  user        User     @relation(fields: [authorId], references: [id])
  category    Category @relation(fields: [catId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([authorId])
  @@index([catId])
}
